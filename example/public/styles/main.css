/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}body,html{background:#fff none}html{font:62.5%/1 helvetica,arial,sans-serif;color:#333}body{min-height:100vh;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}#app--masthead{padding:10px}#app--footer{background-color:#000;color:#fff;padding:10px}main{width:60%;margin:0 auto;-webkit-box-flex:1;-ms-flex:1;flex:1;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}h2{font-size:1.1rem;font-weight:300;text-transform:uppercase;color:#ccc}dd,dt,li,p{margin:1em 0}dd,dt,li,p{font-size:1.4rem}a{color:#a7c55d;text-decoration:none}a:hover{text-decoration:underline}.list-unstyled,.ui__accordion{list-style:none;padding-left:0}.ui__accordion .ui__tab{color:#fff;text-transform:uppercase;font-size:1.2rem;margin:4px 0 0}.ui__accordion .ui__tab:after{position:absolute;top:10px;right:20px;width:8px;height:8px;border-top:3px solid #fff;border-right:3px solid #fff;-webkit-transform:rotate(135deg);transform:rotate(135deg);-webkit-transform-origin:50%;transform-origin:50%;-webkit-transition:-webkit-transform .5s;transition:-webkit-transform .5s;transition:transform .5s;transition:transform .5s,-webkit-transform .5s}html:not(.client__no-js) .ui__accordion .ui__tab:after{content:""}.ui__accordion .ui__tab .ui__toggle{background-color:#888;border:0;text-transform:inherit;font-size:inherit;color:inherit;text-align:left;width:100%;padding:10px 42px 10px 10px}.ui__accordion .ui__tab.state__active:after,.ui__accordion .ui__tab[aria-expanded=true]:after,.ui__accordion .ui__tab[aria-selected=true]:after{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}.ui__accordion .ui__tab.state__active+.ui__pane>div,.ui__accordion .ui__tab[aria-expanded=true]+.ui__pane>div,.ui__accordion .ui__tab[aria-selected=true]+.ui__pane>div{opacity:1}.ui__accordion .ui__pane{border-color:#888;border-style:solid;border-width:0 4px;margin:0;will-change:height;-webkit-transition:height .25s ease;transition:height .25s ease}.ui__accordion .ui__pane:after{content:"";background-color:#888;height:4px;position:absolute;bottom:0;left:0;right:0}.ui__accordion .ui__pane>div{-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto;overflow:hidden;padding:0 10px 4px;opacity:0;will-change:opacity;-webkit-transition:opacity .55s ease 50ms;transition:opacity .55s ease 50ms}.theme__primary a{color:#a7c55d}.theme__primary .ui__tab.state__active .ui__toggle,.theme__primary .ui__tab[aria-expanded=true] .ui__toggle,.theme__primary .ui__tab[aria-selected=true] .ui__toggle,html:not(.client__no-js) .theme__primary .ui__tab .ui__toggle:hover{background-color:#a7c55d}.theme__primary .ui__tab.state__active+.ui__pane,.theme__primary .ui__tab[aria-expanded=true]+.ui__pane,.theme__primary .ui__tab[aria-selected=true]+.ui__pane{border-color:#a7c55d}.theme__primary .ui__tab.state__active+.ui__pane:after,.theme__primary .ui__tab[aria-expanded=true]+.ui__pane:after,.theme__primary .ui__tab[aria-selected=true]+.ui__pane:after{background-color:#a7c55d}.theme__secondary a{color:#ec008c}.theme__secondary .ui__tab.state__active .ui__toggle,.theme__secondary .ui__tab[aria-expanded=true] .ui__toggle,.theme__secondary .ui__tab[aria-selected=true] .ui__toggle,html:not(.client__no-js) .theme__secondary .ui__tab .ui__toggle:hover{background-color:#ec008c}.theme__secondary .ui__tab.state__active+.ui__pane,.theme__secondary .ui__tab[aria-expanded=true]+.ui__pane,.theme__secondary .ui__tab[aria-selected=true]+.ui__pane{border-color:#ec008c}.theme__secondary .ui__tab.state__active+.ui__pane:after,.theme__secondary .ui__tab[aria-expanded=true]+.ui__pane:after,.theme__secondary .ui__tab[aria-selected=true]+.ui__pane:after{background-color:#ec008c}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL25vZGVfbW9kdWxlcy9ub3JtYWxpemUuY3NzL25vcm1hbGl6ZS5jc3MiLCJtYWluLmNzcyIsIl9zdHlsZXMubWFpbi5zY3NzIiwiX3VpLmFjY29yZGlvbi5zY3NzIiwibWFpbi5zY3NzIiwiX2FwcC50aGVtZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDJFQUFBLENBVUEsS0FDRSxnQkFBaUIsQ0FDakIsNkJBQXVDLENBVXpDLEtBQ0UsUUFBUyxDQU9YLEtBQ0UsYUFBYyxDQVFoQixHQUNFLGFBQWMsQ0FDZCxjQUFnQixDQVdsQixHQUNFLDhCQUF1QixDQUF2QixzQkFBdUIsQ0FDdkIsUUFBUyxDQUNULGdCQUEwQixDQVE1QixJQUNFLCtCQUFpQyxDQUNqQyxhQUF1QixDQVV6QixFQUNFLDRCQUE2QixDQVEvQixZQUNFLGtCQUFtQixDQUNuQix5QkFBMEIsQ0FDMUIsd0NBQWlDLENBQWpDLGdDQUEwQyxDQU81QyxTQUVFLGtCQUFtQixDQVFyQixjQUdFLCtCQUFpQyxDQUNqQyxhQUF1QixDQU96QixNQUNFLGFBQWMsQ0FRaEIsUUFFRSxhQUFjLENBQ2QsYUFBYyxDQUNkLGlCQUFrQixDQUNsQix1QkFBd0IsQ0FHMUIsSUFDRSxhQUFlLENBR2pCLElBQ0UsU0FBVyxDQVViLElBQ0UsaUJBQWtCLENBV3BCLHNDQUtFLG1CQUFvQixDQUNwQixjQUFlLENBQ2YsZ0JBQWlCLENBQ2pCLFFBQWtCLENBUXBCLGFBRUUsZ0JBQWlCLENBUW5CLGNBRUUsbUJBQW9CLENBT3RCLGdEQUlFLHlCQUEwQixDQU81Qix3SEFJRSxpQkFBa0IsQ0FDbEIsU0FBVSxDQU9aLDRHQUlFLDZCQUE4QixDQU9oQyxTQUNFLDBCQUE4QixDQVVoQyxPQUNFLDZCQUFzQixDQUF0QixxQkFBc0IsQ0FDdEIsYUFBYyxDQUNkLGFBQWMsQ0FDZCxjQUFlLENBQ2YsU0FBVSxDQUNWLGtCQUE0QixDQU85QixTQUNFLHVCQUF3QixDQU8xQixTQUNFLGFBQWMsQ0NsQmhCLDZCRDRCRSw2QkFBc0IsQ0FBdEIscUJBQXNCLENBQ3RCLFNBQW1CLENDbkJyQixrRkQ0QkUsV0FBWSxDQ3BCZCxjRDZCRSw0QkFBNkIsQ0FDN0IsbUJBQTZCLENDckIvQix5Q0Q2QkUsdUJBQXdCLENBUTFCLDZCQUNFLHlCQUEwQixDQUMxQixZQUFzQixDQVV4QixRQUNFLGFBQWMsQ0FPaEIsUUFDRSxpQkFBa0IsQ0NwQnBCLGtCRHVDRSxZQUFhLENFOVVmLFVBQ0Msb0JBQXFCLENBR3RCLEtBQ0MsdUNBQTBDLENBQzFDLFVBQVcsQ0FHWixLQUNDLGdCQUFpQixDQUNqQixtQkFBYSxDQUFiLG1CQUFhLENBQWIsWUFBYSxDQUNiLDJCQUFzQixDQUF0Qiw0QkFBc0IsQ0FBdEIseUJBQXNCLENBQXRCLHFCQUFzQixDQU12QixlQUNDLFlBQWEsQ0FNZCxhQUNDLHFCQUFzQixDQUN0QixVQUFXLENBQ1gsWUFBYSxDQU1iLEtBQ0MsU0FBVSxDQUNSLGFBQWMsQ0FDZCxrQkFBTyxDQUFQLFVBQU8sQ0FBUCxNQUFPLENBRVAsbUJBQWEsQ0FBYixtQkFBYSxDQUFiLFlBQWEsQ0FDZiwyQkFBc0IsQ0FBdEIsNEJBQXNCLENBQXRCLHlCQUFzQixDQUF0QixxQkFBc0IsQ0FReEIsR0FDQyxnQkFBaUIsQ0FDakIsZUFBZ0IsQ0FDaEIsd0JBQXlCLENBQ3pCLFVBQVcsQ0FPWixXQUhDLFlBS2EsQ0FGZCxXQUNDLGdCQUNhLENBR2QsRUFDQyxhQUFjLENBQ2Qsb0JBQXFCLENBRnRCLFFBS0UseUJBQTBCLENDbkU1Qiw4QkR3RUMsZUFBZ0IsQ0FDaEIsY0FBZSxDQ3pFaEIsd0JBSUUsVUFBVyxDQUNYLHdCQUF5QixDQUN6QixnQkFBaUIsQ0FDakIsY0FBZSxDQVBqQiw4QkFVRyxpQkFBa0IsQ0FDbEIsUUFBUyxDQUNULFVBQVcsQ0FDWCxTQUFVLENBQ1YsVUFBVyxDQUNYLHlCQUEwQixDQUMxQiwyQkFBNEIsQ0FDNUIsZ0NBQXlCLENBQXpCLHdCQUF5QixDQUN6Qiw0QkFBcUIsQ0FBckIsb0JBQXFCLENBQ3JCLHdDQUEyQixDQUEzQixnQ0FBMkIsQ0FBM0Isd0JBQTJCLENBQTNCLDhDQUEyQixDQUUzQix1REFDQyxVQUFXLENBdEJmLG9DQTJCRyxxQkMvQnFCLENEZ0NyQixRQUFjLENBQ2Qsc0JBQXVCLENBQ3ZCLGlCQUFrQixDQUNsQixhQUFjLENBQ2QsZUFBZ0IsQ0FDaEIsVUFBVyxDQUNYLDJCQUE0QixDQWxDL0IsZ0pBeUNJLGdDQUF5QixDQUF6Qix3QkFBeUIsQ0F6QzdCLHdLQThDSyxTQUFVLENBOUNmLHlCQTZERSxpQkFBc0IsQ0FBdEIsa0JBQXNCLENBQXRCLGtCQUFzQixDQUN0QixRQUFTLENBQ1QsbUNBQTZCLENBQTdCLDJCQUE2QixDQS9EL0IsK0JBbUVHLFVBQVcsQ0FDWCxxQkN4RXFCLENEeUVyQixVQUFXLENBQ1gsaUJBQWtCLENBQ2xCLFFBQVMsQ0FDVCxNQUFPLENBQ1AsT0FBUSxDQXpFWCw2QkE2RUcsa0JBQWMsQ0FBZCxpQkFBYyxDQUFkLGFBQWMsQ0FDZCxlQUFnQixDQUNoQixrQkFBbUIsQ0FDbkIsU0FBVSxDQUNWLHlDQUFtQyxDQUFuQyxpQ0FBbUMsQ0VqRnRDLGtCQUVFLGFEUndCLENDTTFCLHlPQWtCSSx3QkR4QnNCLENDTTFCLCtKQXNCSSxvQkQ1QnNCLENDTTFCLGlMQXlCSyx3QkQvQnFCLENDc0MxQixvQkFFRSxhRHZDMEIsQ0NxQzVCLGlQQWtCSSx3QkR2RHdCLENDcUM1QixxS0FzQkksb0JEM0R3QixDQ3FDNUIsdUxBeUJLLHdCRDlEdUIiLCJmaWxlIjoibWFpbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgbm9ybWFsaXplLmNzcyB2OC4wLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG5cbi8qIERvY3VtZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gaU9TLlxuICovXG5cbmh0bWwge1xuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbn1cblxuLyogU2VjdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qKlxuICogUmVuZGVyIHRoZSBgbWFpbmAgZWxlbWVudCBjb25zaXN0ZW50bHkgaW4gSUUuXG4gKi9cblxubWFpbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cblxuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cblxuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogMSAqL1xuICBoZWlnaHQ6IDA7IC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnByZSB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xufVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cblxuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBDaHJvbWUgNTctXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTsgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG59XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0OyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMTAwJTsgLyogMSAqL1xuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xuICBtYXJnaW46IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQgeyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbixcbnNlbGVjdCB7IC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5bdHlwZT1cImJ1dHRvblwiXSxcblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5maWVsZHNldCB7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTsgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsOyAvKiAxICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xuXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDEwKy5cbiAqL1xuXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLlxuICovXG5cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxuICovXG5cblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cblxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbn1cblxuLyogSW50ZXJhY3RpdmVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSAxMCssIGFuZCBGaXJlZm94LlxuICovXG5cbmRldGFpbHMge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogbGlzdC1pdGVtO1xufVxuXG4vKiBNaXNjXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwKy5cbiAqL1xuXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAuXG4gKi9cblxuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuIiwiLypcbipcbipcdEB0aXRsZTogXHRtYWluLnNjc3NcbiogXHRAcHJvamVjdDogXHRhY2NvcmRpb24tdWlcbiogXHRAYXV0aG9yOlx0cGl4OFxuKiovXG4vKiEgbm9ybWFsaXplLmNzcyB2OC4wLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG4vKiBEb2N1bWVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBpT1MuXG4gKi9cbmh0bWwge1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAgLyogMSAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi8gfVxuXG4vKiBTZWN0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzLlxuICovXG5ib2R5IHtcbiAgbWFyZ2luOiAwOyB9XG5cbi8qKlxuICogUmVuZGVyIHRoZSBgbWFpbmAgZWxlbWVudCBjb25zaXN0ZW50bHkgaW4gSUUuXG4gKi9cbm1haW4ge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7IH1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAvKiAxICovXG4gIGhlaWdodDogMDtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xucHJlIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtO1xuICAvKiAyICovIH1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyB9XG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIENocm9tZSA1Ny1cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlOyB9XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtOyB9XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtOyB9XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAuXG4gKi9cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTsgfVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgLyogMSAqL1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAgLyogMSAqL1xuICBtYXJnaW46IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQge1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sXG5bdHlwZT1cImJ1dHRvblwiXSxcblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7IH1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0OyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5maWVsZHNldCB7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDtcbiAgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAvKiAxICovIH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgMTArLlxuICovXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAuXG4gKi9cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gKi9cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuICovXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuICAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4O1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXG4gKi9cblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cbiAqL1xuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDIgKi8gfVxuXG4vKiBJbnRlcmFjdGl2ZVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSAxMCssIGFuZCBGaXJlZm94LlxuICovXG5kZXRhaWxzIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cbiAqL1xuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTsgfVxuXG4vKiBNaXNjXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMCsuXG4gKi9cbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLlxuICovXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLypcbipcdENvbXByZXNzZWQgYW5kIGdlbmVyYXRlZCB1c2luZyBncnVudC5qcyBzYXNzL2NvbXByZXNzIGJ1aWxkIHRvb2xzXG4qXG4qXHRAdGl0bGU6IFx0c3R5bGVzLm1haW4uc2NzcyAocGFydGlhbClcbiogXHRAcHJvamVjdDogXHRcbiogXHRAYXV0aG9yOiBcdEpvbmF0aGFuIEJyaW5jYXRAcGl4OC5jby51aywgPGpvbmF0aGFuQHBpeDguY28udWs+XG4qKi9cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cdENvcmVcblx0PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbmh0bWwsIGJvZHkge1xuICBiYWNrZ3JvdW5kOiAjRkZGIG5vbmU7IH1cblxuaHRtbCB7XG4gIGZvbnQ6IDYyLjUlLzEgaGVsdmV0aWNhLCBhcmlhbCwgc2Fucy1zZXJpZjtcbiAgY29sb3I6ICMzMzM7IH1cblxuYm9keSB7XG4gIG1pbi1oZWlnaHQ6IDEwMHZoO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cdE1hc3RoZWFkXG5cdD09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4jYXBwLS1tYXN0aGVhZCB7XG4gIHBhZGRpbmc6IDEwcHg7IH1cblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblx0Rm9vdGVyKFNpdGUvYXBwKVxuXHQ9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuI2FwcC0tZm9vdGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcbiAgY29sb3I6ICNGRkY7XG4gIHBhZGRpbmc6IDEwcHg7IH1cblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gUGFnZSA+IGNvbnRlbnQgKi9cbm1haW4ge1xuICB3aWR0aDogNjAlO1xuICBtYXJnaW46IDAgYXV0bztcbiAgZmxleDogMTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgfVxuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSA8cHJvamVjdD4gKi9cbmgyIHtcbiAgZm9udC1zaXplOiAxLjFyZW07XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGNvbG9yOiAjQ0NDOyB9XG5cbnAge1xuICBtYXJnaW46IDFlbSAwOyB9XG5cbnAsIGxpLCBkdCwgZGQge1xuICBmb250LXNpemU6IDEuNHJlbTtcbiAgbWFyZ2luOiAxZW0gMDsgfVxuXG5hIHtcbiAgY29sb3I6ICNBN0M1NUQ7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuICBhOmhvdmVyIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgfVxuXG4ubGlzdC11bnN0eWxlZCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmctbGVmdDogMDsgfVxuXG4vKlxuKlx0Q29tcHJlc3NlZCBhbmQgZ2VuZXJhdGVkIHVzaW5nIGdydW50LmpzIHNhc3MvY29tcHJlc3MgYnVpbGQgdG9vbHNcbipcbipcdEB0aXRsZTogXHR1aS5hY2NvcmRpb24uc2NzcyAocGFydGlhbClcbiogXHRAcHJvamVjdDpcdHBpeDggdWlcbiogXHRAYXV0aG9yOiBcdEpvbmF0aGFuIEJyaW5jYXRAcGl4OC5jby51ayA8am9uYXRoYW5AcGl4OC5jby51az5cbipcbioqL1xuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblx0VUkgQWNjb3JkaW9uXG5cdD09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4udWlfX2FjY29yZGlvbiB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmctbGVmdDogMDsgfVxuICAudWlfX2FjY29yZGlvbiAudWlfX3RhYiB7XG4gICAgY29sb3I6ICNGRkY7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBmb250LXNpemU6IDEuMnJlbTtcbiAgICBtYXJnaW46IDRweCAwIDA7IH1cbiAgICAudWlfX2FjY29yZGlvbiAudWlfX3RhYjphZnRlciB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDEwcHg7XG4gICAgICByaWdodDogMjBweDtcbiAgICAgIHdpZHRoOiA4cHg7XG4gICAgICBoZWlnaHQ6IDhweDtcbiAgICAgIGJvcmRlci10b3A6IDNweCBzb2xpZCAjRkZGO1xuICAgICAgYm9yZGVyLXJpZ2h0OiAzcHggc29saWQgI0ZGRjtcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKDEzNWRlZyk7XG4gICAgICB0cmFuc2Zvcm0tb3JpZ2luOiA1MCU7XG4gICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gNTAwbXM7IH1cbiAgICAgIGh0bWw6bm90KC5jbGllbnRfX25vLWpzKSAudWlfX2FjY29yZGlvbiAudWlfX3RhYjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7IH1cbiAgICAudWlfX2FjY29yZGlvbiAudWlfX3RhYiAudWlfX3RvZ2dsZSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjODg4ODg4O1xuICAgICAgYm9yZGVyOiAwIG5vbmU7XG4gICAgICB0ZXh0LXRyYW5zZm9ybTogaW5oZXJpdDtcbiAgICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICAgIGNvbG9yOiBpbmhlcml0O1xuICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgcGFkZGluZzogMTBweCA0MnB4IDEwcHggMTBweDsgfVxuICAgIC51aV9fYWNjb3JkaW9uIC51aV9fdGFiLnN0YXRlX19hY3RpdmU6YWZ0ZXIsIC51aV9fYWNjb3JkaW9uIC51aV9fdGFiW2FyaWEtc2VsZWN0ZWQ9dHJ1ZV06YWZ0ZXIsIC51aV9fYWNjb3JkaW9uIC51aV9fdGFiW2FyaWEtZXhwYW5kZWQ9dHJ1ZV06YWZ0ZXIge1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTsgfVxuICAgIC51aV9fYWNjb3JkaW9uIC51aV9fdGFiLnN0YXRlX19hY3RpdmUgKyAudWlfX3BhbmUgPiBkaXYsIC51aV9fYWNjb3JkaW9uIC51aV9fdGFiW2FyaWEtc2VsZWN0ZWQ9dHJ1ZV0gKyAudWlfX3BhbmUgPiBkaXYsIC51aV9fYWNjb3JkaW9uIC51aV9fdGFiW2FyaWEtZXhwYW5kZWQ9dHJ1ZV0gKyAudWlfX3BhbmUgPiBkaXYge1xuICAgICAgb3BhY2l0eTogMTsgfVxuICAudWlfX2FjY29yZGlvbiAudWlfX3BhbmUge1xuICAgIGJvcmRlcjogNHB4IHNvbGlkICM4ODg4ODg7XG4gICAgYm9yZGVyLXRvcC13aWR0aDogMDtcbiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAwO1xuICAgIG1hcmdpbjogMDtcbiAgICB0cmFuc2l0aW9uOiBoZWlnaHQgZWFzZSAyNTBtczsgfVxuICAgIC51aV9fYWNjb3JkaW9uIC51aV9fcGFuZTphZnRlciB7XG4gICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzg4ODg4ODtcbiAgICAgIGhlaWdodDogNHB4O1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgYm90dG9tOiAwO1xuICAgICAgbGVmdDogMDtcbiAgICAgIHJpZ2h0OiAwOyB9XG4gICAgLnVpX19hY2NvcmRpb24gLnVpX19wYW5lID4gZGl2IHtcbiAgICAgIGZsZXg6IDEgMSBhdXRvO1xuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgIC8qY291bnRlciBtYXJnaW4gY29sbGFwc2UqL1xuICAgICAgcGFkZGluZzogMCAxMHB4IDRweDtcbiAgICAgIG9wYWNpdHk6IDA7XG4gICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IGVhc2UgNTUwbXMgNTBtczsgfVxuXG4vKlxuKlx0Q29tcHJlc3NlZCBhbmQgZ2VuZXJhdGVkIHVzaW5nIGdydW50LmpzIHNhc3MvY29tcHJlc3MgYnVpbGQgdG9vbHNcbipcbipcdEB0aXRsZTogXHRhcHAudGhlbWUuc2NzcyAocGFydGlhbClcbiogXHRAcHJvamVjdDpcdHBpeDggdWlcbiogXHRAYXV0aG9yOiBcdEpvbmF0aGFuIEJyaW5jYXRAcGl4OC5jby51ayA8am9uYXRoYW5AcGl4OC5jby51az5cbipcbioqL1xuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblx0VUkgdGhlbWVzXG5cdD09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4udGhlbWVfX3ByaW1hcnkgYSB7XG4gIGNvbG9yOiAjQTdDNTVEOyB9XG5cbmh0bWw6bm90KC5jbGllbnRfX25vLWpzKSAudGhlbWVfX3ByaW1hcnkgLnVpX190YWIgLnVpX190b2dnbGU6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjQTdDNTVEOyB9XG5cbi50aGVtZV9fcHJpbWFyeSAudWlfX3RhYi5zdGF0ZV9fYWN0aXZlIC51aV9fdG9nZ2xlLCAudGhlbWVfX3ByaW1hcnkgLnVpX190YWJbYXJpYS1zZWxlY3RlZD10cnVlXSAudWlfX3RvZ2dsZSwgLnRoZW1lX19wcmltYXJ5IC51aV9fdGFiW2FyaWEtZXhwYW5kZWQ9dHJ1ZV0gLnVpX190b2dnbGUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjQTdDNTVEOyB9XG5cbi50aGVtZV9fcHJpbWFyeSAudWlfX3RhYi5zdGF0ZV9fYWN0aXZlICsgLnVpX19wYW5lLCAudGhlbWVfX3ByaW1hcnkgLnVpX190YWJbYXJpYS1zZWxlY3RlZD10cnVlXSArIC51aV9fcGFuZSwgLnRoZW1lX19wcmltYXJ5IC51aV9fdGFiW2FyaWEtZXhwYW5kZWQ9dHJ1ZV0gKyAudWlfX3BhbmUge1xuICBib3JkZXItY29sb3I6ICNBN0M1NUQ7IH1cbiAgLnRoZW1lX19wcmltYXJ5IC51aV9fdGFiLnN0YXRlX19hY3RpdmUgKyAudWlfX3BhbmU6YWZ0ZXIsIC50aGVtZV9fcHJpbWFyeSAudWlfX3RhYlthcmlhLXNlbGVjdGVkPXRydWVdICsgLnVpX19wYW5lOmFmdGVyLCAudGhlbWVfX3ByaW1hcnkgLnVpX190YWJbYXJpYS1leHBhbmRlZD10cnVlXSArIC51aV9fcGFuZTphZnRlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0E3QzU1RDsgfVxuXG4udGhlbWVfX3NlY29uZGFyeSBhIHtcbiAgY29sb3I6ICNFQzAwOEM7IH1cblxuaHRtbDpub3QoLmNsaWVudF9fbm8tanMpIC50aGVtZV9fc2Vjb25kYXJ5IC51aV9fdGFiIC51aV9fdG9nZ2xlOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0VDMDA4QzsgfVxuXG4udGhlbWVfX3NlY29uZGFyeSAudWlfX3RhYi5zdGF0ZV9fYWN0aXZlIC51aV9fdG9nZ2xlLCAudGhlbWVfX3NlY29uZGFyeSAudWlfX3RhYlthcmlhLXNlbGVjdGVkPXRydWVdIC51aV9fdG9nZ2xlLCAudGhlbWVfX3NlY29uZGFyeSAudWlfX3RhYlthcmlhLWV4cGFuZGVkPXRydWVdIC51aV9fdG9nZ2xlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0VDMDA4QzsgfVxuXG4udGhlbWVfX3NlY29uZGFyeSAudWlfX3RhYi5zdGF0ZV9fYWN0aXZlICsgLnVpX19wYW5lLCAudGhlbWVfX3NlY29uZGFyeSAudWlfX3RhYlthcmlhLXNlbGVjdGVkPXRydWVdICsgLnVpX19wYW5lLCAudGhlbWVfX3NlY29uZGFyeSAudWlfX3RhYlthcmlhLWV4cGFuZGVkPXRydWVdICsgLnVpX19wYW5lIHtcbiAgYm9yZGVyLWNvbG9yOiAjRUMwMDhDOyB9XG4gIC50aGVtZV9fc2Vjb25kYXJ5IC51aV9fdGFiLnN0YXRlX19hY3RpdmUgKyAudWlfX3BhbmU6YWZ0ZXIsIC50aGVtZV9fc2Vjb25kYXJ5IC51aV9fdGFiW2FyaWEtc2VsZWN0ZWQ9dHJ1ZV0gKyAudWlfX3BhbmU6YWZ0ZXIsIC50aGVtZV9fc2Vjb25kYXJ5IC51aV9fdGFiW2FyaWEtZXhwYW5kZWQ9dHJ1ZV0gKyAudWlfX3BhbmU6YWZ0ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNFQzAwOEM7IH1cbiIsIi8qXG4qXHRDb21wcmVzc2VkIGFuZCBnZW5lcmF0ZWQgdXNpbmcgZ3J1bnQuanMgc2Fzcy9jb21wcmVzcyBidWlsZCB0b29sc1xuKlxuKlx0QHRpdGxlOiBcdHN0eWxlcy5tYWluLnNjc3MgKHBhcnRpYWwpXG4qIFx0QHByb2plY3Q6IFx0XG4qIFx0QGF1dGhvcjogXHRKb25hdGhhbiBCcmluY2F0QHBpeDguY28udWssIDxqb25hdGhhbkBwaXg4LmNvLnVrPlxuKiovXG5AY2hhcnNldCBcIlVURi04XCI7XG5cblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblx0Q29yZVxuXHQ9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuaHRtbCwgYm9keSB7XG5cdGJhY2tncm91bmQ6ICNGRkYgbm9uZTtcbn1cblxuaHRtbCB7XG5cdGZvbnQ6IDYyLjUlLzEgaGVsdmV0aWNhLCBhcmlhbCwgc2Fucy1zZXJpZjtcblx0Y29sb3I6ICMzMzM7XG59XG5cbmJvZHl7XG5cdG1pbi1oZWlnaHQ6IDEwMHZoO1xuXHRkaXNwbGF5OiBmbGV4O1xuXHRmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXHRNYXN0aGVhZFxuXHQ9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuI2FwcC0tbWFzdGhlYWQge1xuXHRwYWRkaW5nOiAxMHB4O1xufVxuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXHRGb290ZXIoU2l0ZS9hcHApXG5cdD09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4jYXBwLS1mb290ZXJ7XG5cdGJhY2tncm91bmQtY29sb3I6ICMwMDA7XG5cdGNvbG9yOiAjRkZGO1xuXHRwYWRkaW5nOiAxMHB4O1xufVxuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSBQYWdlID4gY29udGVudCAqL1xuI2FwcC0tY29udGVudHtcbn1cblx0bWFpbiB7XG5cdFx0d2lkdGg6IDYwJTtcbiAgXHRcdG1hcmdpbjogMCBhdXRvO1xuICBcdFx0ZmxleDogMTtcblxuICBcdFx0ZGlzcGxheTogZmxleDtcblx0XHRmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBcdFx0Ly9qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcblx0fVxuXG5cdCNhcHAtLW1haW4ge1xuXHR9XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IDxwcm9qZWN0PiAqL1xuaDIge1xuXHRmb250LXNpemU6IDEuMXJlbTtcblx0Zm9udC13ZWlnaHQ6IDMwMDtcblx0dGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcblx0Y29sb3I6ICNDQ0M7XG59XG5cbnAge1xuXHRtYXJnaW46IDFlbSAwO1xufVxuXG5wLCBsaSwgZHQsIGRkIHtcblx0Zm9udC1zaXplOiAxLjRyZW07XG5cdG1hcmdpbjogMWVtIDA7XG59XG5cbmEge1xuXHRjb2xvcjogI0E3QzU1RDtcblx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXG5cdCY6aG92ZXIge1xuXHRcdHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOztcblx0fVxufVxuXG5AbWl4aW4gbGlzdC11bnN0eWxlZCB7XG5cdGxpc3Qtc3R5bGU6IG5vbmU7XG5cdHBhZGRpbmctbGVmdDogMDtcbn1cblxuLmxpc3QtdW5zdHlsZWQge1xuXHRAaW5jbHVkZSBsaXN0LXVuc3R5bGVkO1xufVxuIiwiLypcbipcdENvbXByZXNzZWQgYW5kIGdlbmVyYXRlZCB1c2luZyBncnVudC5qcyBzYXNzL2NvbXByZXNzIGJ1aWxkIHRvb2xzXG4qXG4qXHRAdGl0bGU6IFx0dWkuYWNjb3JkaW9uLnNjc3MgKHBhcnRpYWwpXG4qIFx0QHByb2plY3Q6XHRwaXg4IHVpXG4qIFx0QGF1dGhvcjogXHRKb25hdGhhbiBCcmluY2F0QHBpeDguY28udWsgPGpvbmF0aGFuQHBpeDguY28udWs+XG4qXG4qKi9cblxuQGNoYXJzZXQgXCJVVEYtOFwiO1xuXG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cdFVJIEFjY29yZGlvblxuXHQ9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLnVpX19hY2NvcmRpb24ge1xuXHRAaW5jbHVkZSBsaXN0LXVuc3R5bGVkO1xuXG5cdC51aV9fdGFiIHtcblx0XHRjb2xvcjogI0ZGRjtcblx0XHR0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuXHRcdGZvbnQtc2l6ZTogMS4ycmVtO1xuXHRcdG1hcmdpbjogNHB4IDAgMDtcblx0XG5cdFx0JjphZnRlciB7XG5cdFx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0XHR0b3A6IDEwcHg7XG5cdFx0XHRyaWdodDogMjBweDtcblx0XHRcdHdpZHRoOiA4cHg7XG5cdFx0XHRoZWlnaHQ6IDhweDtcblx0XHRcdGJvcmRlci10b3A6IDNweCBzb2xpZCAjRkZGO1xuXHRcdFx0Ym9yZGVyLXJpZ2h0OiAzcHggc29saWQgI0ZGRjtcblx0XHRcdHRyYW5zZm9ybTogcm90YXRlKDEzNWRlZyk7XG5cdFx0XHR0cmFuc2Zvcm0tb3JpZ2luOiA1MCU7XG5cdFx0XHR0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gNTAwbXM7XG5cblx0XHRcdGh0bWw6bm90KC5jbGllbnRfX25vLWpzKSAmIHtcblx0XHRcdFx0Y29udGVudDogXCJcIjtcblx0XHRcdH1cblx0XHR9XG5cdFxuXHRcdC51aV9fdG9nZ2xlIHtcblx0XHRcdGJhY2tncm91bmQtY29sb3I6ICRjb2xvcl9fYmFzZTtcblx0XHRcdGJvcmRlcjogMCBub25lO1xuXHRcdFx0dGV4dC10cmFuc2Zvcm06IGluaGVyaXQ7XG5cdFx0XHRmb250LXNpemU6IGluaGVyaXQ7XG5cdFx0XHRjb2xvcjogaW5oZXJpdDtcblx0XHRcdHRleHQtYWxpZ246IGxlZnQ7XG5cdFx0XHR3aWR0aDogMTAwJTtcblx0XHRcdHBhZGRpbmc6IDEwcHggNDJweCAxMHB4IDEwcHg7XG5cdFx0fVxuXHRcblx0XHQmLnN0YXRlX19hY3RpdmUsXG5cdFx0JlthcmlhLXNlbGVjdGVkPXRydWVdLFxuXHRcdCZbYXJpYS1leHBhbmRlZD10cnVlXSB7XG5cdFx0XHQmOmFmdGVyIHtcblx0XHRcdFx0dHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcblx0XHRcdH1cblxuXHRcdFx0JiArIC51aV9fcGFuZSB7XG5cdFx0XHRcdCYgPiBkaXYge1xuXHRcdFx0XHRcdG9wYWNpdHk6IDE7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyAmLnN0YXRlX190cmFuc2l0aW9uIHtcblx0XHQvLyBcdCYgKyAudWlfX3BhbmUge1xuXHRcdC8vIFx0XHR0cmFuc2l0aW9uOiBoZWlnaHQgZWFzZSAyNTBtcztcblx0XHQvLyBcdH1cblx0XHQvLyB9XG5cdH1cblxuXHQudWlfX3BhbmUge1xuXHRcdGJvcmRlcjogNHB4IHNvbGlkICRjb2xvcl9fYmFzZTtcblx0XHRib3JkZXItdG9wLXdpZHRoOiAwO1xuXHRcdGJvcmRlci1ib3R0b20td2lkdGg6IDA7XG5cdFx0bWFyZ2luOiAwO1xuXHRcdHRyYW5zaXRpb246IGhlaWdodCBlYXNlIDI1MG1zO1xuXG5cdFx0Ly9ERVZOT1RFOiB0aGlzIGlzIGEgbW9yZSBlbGVnYW50IHdheSB0byBhY2NvbW9kYXRlIHRoZSB2aXN1YWwgcmVhbGlzYXRpb24gb2YgYm90dG9tIGJvcmRlciBhbmQgYWxsb3dpbmcgaXQgdG8gY29sbGFwc2UgYW5kIGdldCBjcm9wcGVkKGxlYXZpbmcgbm8gcmVzaWR1YWwgYXJ0aWZhY3QgdG8gY291bnRlciBpLmUuIGEgdmlzaWJsZSBib3R0b20gYm9yZGVyIHJlbWFpbmluZyBiZWxvdyBlYWNoIGFjY29yZGlvbiB0YWIgZXh0ZXJuYWwgdG8gdGhlIGJ1dHRvbidzIGhvdHNwb3QpXG5cdFx0JjphZnRlciB7XG5cdFx0XHRjb250ZW50OiBcIlwiO1xuXHRcdFx0YmFja2dyb3VuZC1jb2xvcjogJGNvbG9yX19iYXNlO1xuXHRcdFx0aGVpZ2h0OiA0cHg7XG5cdFx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0XHRib3R0b206IDA7XG5cdFx0XHRsZWZ0OiAwO1xuXHRcdFx0cmlnaHQ6IDA7XG5cdFx0fVxuXG5cdFx0JiA+IGRpdiB7XG5cdFx0XHRmbGV4OiAxIDEgYXV0bztcblx0XHRcdG92ZXJmbG93OiBoaWRkZW47IC8qY291bnRlciBtYXJnaW4gY29sbGFwc2UqL1xuXHRcdFx0cGFkZGluZzogMCAxMHB4IDRweDtcblx0XHRcdG9wYWNpdHk6IDA7XG5cdFx0XHR0cmFuc2l0aW9uOiBvcGFjaXR5IGVhc2UgNTUwbXMgNTBtcztcblx0XHR9XG5cdH1cbn1cbiIsIi8qXG4qXG4qXHRAdGl0bGU6IFx0bWFpbi5zY3NzXG4qIFx0QHByb2plY3Q6IFx0YWNjb3JkaW9uLXVpXG4qIFx0QGF1dGhvcjpcdHBpeDhcbioqL1xuXG5AaW1wb3J0ICdub3JtYWxpemUnO1xuXG4kY29sb3JfX3ByaW1hcnk6IFx0XHQjQTdDNTVEO1xuJGNvbG9yX19zZWNvbmRhcnk6IFx0XHQjRUMwMDhDO1xuJGNvbG9yX19iYXNlOiBcdFx0XHQjODg4ODg4O1xuXG5AaW1wb3J0ICdzdHlsZXMubWFpbic7XG5AaW1wb3J0ICd1aS5hY2NvcmRpb24nO1xuQGltcG9ydCAnYXBwLnRoZW1lJztcbiIsIi8qXG4qXHRDb21wcmVzc2VkIGFuZCBnZW5lcmF0ZWQgdXNpbmcgZ3J1bnQuanMgc2Fzcy9jb21wcmVzcyBidWlsZCB0b29sc1xuKlxuKlx0QHRpdGxlOiBcdGFwcC50aGVtZS5zY3NzIChwYXJ0aWFsKVxuKiBcdEBwcm9qZWN0Olx0cGl4OCB1aVxuKiBcdEBhdXRob3I6IFx0Sm9uYXRoYW4gQnJpbmNhdEBwaXg4LmNvLnVrIDxqb25hdGhhbkBwaXg4LmNvLnVrPlxuKlxuKiovXG5cbkBjaGFyc2V0IFwiVVRGLThcIjtcblxuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXHRVSSB0aGVtZXNcblx0PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi50aGVtZV9fcHJpbWFyeSB7XG5cdGEge1xuXHRcdGNvbG9yOiAkY29sb3JfX3ByaW1hcnk7XG5cdH1cblxuXHQudWlfX3RhYiB7XG5cdFx0LnVpX190b2dnbGUge1xuXHRcdFx0aHRtbDpub3QoLmNsaWVudF9fbm8tanMpICYge1xuXHRcdFx0XHQmOmhvdmVyIHtcblx0XHRcdFx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3JfX3ByaW1hcnk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdFxuXHRcdCYuc3RhdGVfX2FjdGl2ZSxcblx0XHQmW2FyaWEtc2VsZWN0ZWQ9dHJ1ZV0sXG5cdFx0JlthcmlhLWV4cGFuZGVkPXRydWVdIHtcblx0XHRcdC51aV9fdG9nZ2xlIHtcblx0XHRcdFx0YmFja2dyb3VuZC1jb2xvcjogJGNvbG9yX19wcmltYXJ5O1xuXHRcdFx0fVxuXG5cdFx0XHQmICsgLnVpX19wYW5lIHtcblx0XHRcdFx0Ym9yZGVyLWNvbG9yOiAkY29sb3JfX3ByaW1hcnk7XG5cblx0XHRcdFx0JjphZnRlciB7XG5cdFx0XHRcdFx0YmFja2dyb3VuZC1jb2xvcjogJGNvbG9yX19wcmltYXJ5O1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59XG5cbi50aGVtZV9fc2Vjb25kYXJ5IHtcblx0YSB7XG5cdFx0Y29sb3I6ICRjb2xvcl9fc2Vjb25kYXJ5O1xuXHR9XG5cblx0LnVpX190YWIge1xuXHRcdC51aV9fdG9nZ2xlIHtcblx0XHRcdGh0bWw6bm90KC5jbGllbnRfX25vLWpzKSAmIHtcblx0XHRcdFx0Jjpob3ZlciB7XG5cdFx0XHRcdFx0YmFja2dyb3VuZC1jb2xvcjogJGNvbG9yX19zZWNvbmRhcnk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdFxuXHRcdCYuc3RhdGVfX2FjdGl2ZSxcblx0XHQmW2FyaWEtc2VsZWN0ZWQ9dHJ1ZV0sXG5cdFx0JlthcmlhLWV4cGFuZGVkPXRydWVdIHtcblx0XHRcdC51aV9fdG9nZ2xlIHtcblx0XHRcdFx0YmFja2dyb3VuZC1jb2xvcjogJGNvbG9yX19zZWNvbmRhcnk7XG5cdFx0XHR9XG5cblx0XHRcdCYgKyAudWlfX3BhbmUge1xuXHRcdFx0XHRib3JkZXItY29sb3I6ICRjb2xvcl9fc2Vjb25kYXJ5O1xuXG5cdFx0XHRcdCY6YWZ0ZXIge1xuXHRcdFx0XHRcdGJhY2tncm91bmQtY29sb3I6ICRjb2xvcl9fc2Vjb25kYXJ5O1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59XG4iXX0= */
